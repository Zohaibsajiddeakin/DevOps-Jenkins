pipeline {
    agent any

    environment {
        // Define any environment variables if needed
        DOCKER_IMAGE = "my-app:${env.BUILD_ID}"
    }

    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Building the application...'
                    bat 'mvn clean package'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
                    echo 'Build artifacts archived.'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    echo 'Running tests...'
                    bat 'mvn test'
                }
            }
            post {
                success {
                    junit '**/target/surefire-reports/*.xml'
                    echo 'Test results published.'
                }

            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo 'Deploying the application...'
                    bat """
                        docker build -t %DOCKER_IMAGE% .
                        docker run -d -p 8080:8080 %DOCKER_IMAGE%
                    """
                }
            }
            post {
                success {
                    echo 'Deployment succeeded.'
                }
            }
        }

        stage('Release') {
            steps {
                script {
                    echo 'Releasing the application...'
                    bat """
                        git tag -a v%BUILD_ID% -m "Release version %BUILD_ID%"
                        git push origin v%BUILD_ID%
                    """
                }
            }
            post {
                success {
                    mail to: 's223192485@deakin.edu.au',
                         subject: "Release Successful: ${currentBuild.fullDisplayName}",
                         body: "Build ${currentBuild.fullDisplayName} has been successfully released."
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
