pipeline {
  agent any 

  triggers {
    pollSCM(scmpoll_spec: 'H/5 * * * *')
  }

  stages {
    stage('Build') {
      steps {
        echo 'Building code using Maven'
      }
    }
    stage('Unit and Integration Tests') {
      steps {
        echo 'Running unit tests with JUnit'
        echo 'Running integration tests'
      }
      post {
        always {
          emailext (
            body: 'Unit and Integration Tests - ${currentBuild.result}',
            subject: 'Jenkins Pipeline - Unit and Integration Tests Results',
            to: 'd4afnan@gmail.com',
          )
        }
      }
    }
    stage('Code Analysis') {
      steps {
        echo 'Running code analysis with SonarQube'
      }
    }
    stage('Security Scan') {
      steps {
        echo 'Running security scan with SAST tool'
      }
      post {
        always {
          emailext (
            body: 'Security Scan - ${currentBuild.result}',
            subject: 'Jenkins Pipeline - Security Scan Results',
            to: 'd4afnan@gmail.com',
          )
        }
      }
    }
    stage('Deploy to Staging') {
      steps {
        echo 'Deploying application to Staging server'
      }
    }
    stage('Integration Tests on Staging') {
      steps {
        echo 'Running integration tests on Staging environment'
      }
    }
    stage('Deploy to Production') {
      steps {
        echo 'Deploying application to Production server'
      }
    } 
  } 
}